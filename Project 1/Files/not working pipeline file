pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'farahc123/project8-app-db-method2'
        KUBE_DEPLOYMENT = 'sparta-app'
        KUBE_NAMESPACE = 'default'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/farahc123/tech501-sparta-app-CICD.git'
            }
        }

        stage('Initialize') {
            steps {
                script {
                    def dockerHome = tool 'my-docker'
                    env.PATH = "${dockerHome}/bin:${env.PATH}"
                }
            }
        }


        stage('Build Docker Image') {
            steps {
                script {
                    env.IMAGE_TAG = sh(script: "date +%Y%m%d%H%M%S", returnStdout: true).trim()

                    withCredentials([usernamePassword(credentialsId: 'my-dockerhub', 
                                                      usernameVariable: 'user', 
                                                      passwordVariable: 'pass')]) {

                        sh """
                            "docker login --username=${user} --password=${pass}"
                            docker build -t $DOCKER_IMAGE:$IMAGE_TAG .
                            docker push $DOCKER_IMAGE:$IMAGE_TAG
                        """
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sshagent(['minikube-ec2']) {
                        sh """
                            ssh -o StrictHostKeyChecking=no ubuntu@ec2-46-51-148-92.eu-west-1.compute.amazonaws.com \\
                            "kubectl set image deployment/$KUBE_DEPLOYMENT $KUBE_DEPLOYMENT=$DOCKER_IMAGE:$IMAGE_TAG --namespace=$KUBE_NAMESPACE"
                        """
                    }
                }
            }
        }
    }
}
